package first;
// more about Lambda expression 
//Lambda expression is a new and important feature of Java which was included in Java SE 8. 
//It provides a clear and concise way to represent one method interface using an expression. 
//It is very useful in collection library. It helps to iterate, filter and extract data from collection.
//
//The Lambda expression is used to provide the implementation of an interface which has functional interface.
//It saves a lot of code. In case of lambda expression, we don't need to define
//the method again for providing the implementation. Here, we just write the implementation code.
//
//Java lambda expression is treated as a function, so compiler does not create .class file.

interface Z{
	void show();
}
//class XZ implements Z{
//	public void show() {
//		System.out.println("In XZ implementation method of interface");//instead of implementing interface in class write anonymous class 
//	}
//}
public class Ninetyfour {
public static void main(String [] args) {
Z a=new Z() {
	@Override
	public void show() {
		System.out.println("In anonymous class  implementation method of interface");
	}
};
a.show();
System.out.println(a.getClass().getName());//first.Ninetytwo$1
}
}

